/*
 * MBTA
 *
 * MBTA service API. https://www.mbta.com Source code: https://github.com/mbta/api
 *
 * The version of the OpenAPI document: 3.0
 * Contact: developer@mbta.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct PredictionResourceRelationships {
    #[serde(rename = "vehicle", skip_serializing_if = "Option::is_none")]
    pub vehicle: Option<Box<crate::models::PredictionResourceRelationshipsVehicle>>,
    #[serde(rename = "trip", skip_serializing_if = "Option::is_none")]
    pub trip: Option<Box<crate::models::ScheduleResourceRelationshipsTrip>>,
    #[serde(rename = "stop", skip_serializing_if = "Option::is_none")]
    pub stop: Option<Box<crate::models::ScheduleResourceRelationshipsStop>>,
    #[serde(rename = "schedule", skip_serializing_if = "Option::is_none")]
    pub schedule: Option<Box<crate::models::PredictionResourceRelationshipsSchedule>>,
    #[serde(rename = "route", skip_serializing_if = "Option::is_none")]
    pub route: Option<Box<crate::models::TripResourceRelationshipsRoute>>,
    #[serde(rename = "alerts", skip_serializing_if = "Option::is_none")]
    pub alerts: Option<Box<crate::models::PredictionResourceRelationshipsAlerts>>,
}

impl PredictionResourceRelationships {
    pub fn new() -> PredictionResourceRelationships {
        PredictionResourceRelationships {
            vehicle: None,
            trip: None,
            stop: None,
            schedule: None,
            route: None,
            alerts: None,
        }
    }
}


